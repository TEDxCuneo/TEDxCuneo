---
import type { TypeSpeakerSkeleton } from "@lib/generated/contentful";
import type { Entry } from "@lib/utils";

interface Props extends Entry<TypeSpeakerSkeleton> {}

const {
  fields: { firstName, lastName, job, image, page, talkTitle },
} = Astro.props;

const clickable = page ? true : false;
---

<div
  class="rounded-lg no-underline bg-tedGray flex flex-col justify-between shadow overflow-hidden h-auto self-stretch transition ease-in-out delay-100 duration-200 select-none"
  class:list={clickable ? ["md:hover:scale-105", "cursor-pointer"] : []}
>
  <div class="mb-6">
    <picture>
      <source
        type="image/webp"
        srcset={image?.fields.file?.url + "?w=500&h=500&fit=thumb&fm=webp"}
      />
      <source
        type="image/jpeg"
        srcset={image?.fields.file?.url + "?w=500&h=500&fit=thumb&q=70&fm=jpg"}
      />
      <img
        class="w-full"
        src={image?.fields.file?.url + "?w=500&h=500&fit=thumb&q=70&fm=jpg"}
        alt={firstName + " " + lastName}
      />
    </picture>
  </div>
  <div class="px-4 pb-4">
    {
      talkTitle ? (
        <>
          <p class="mb-2 text-tedDarkWhite">
            {firstName}&nbsp;{lastName}
          </p>
          <h3 class="mb-2 text-tedDarkWhite">{talkTitle}</h3>
        </>
      ) : (
        <>
          <h3 class="mb-2">
            {firstName}&nbsp;{lastName}
          </h3>
          <p class="text-tedDarkWhite">{job}</p>
        </>
      )
    }
  </div>
  {
    page && (
      <p class="w-full text-center mt-4 pb-4">
        <span class="link-underline link-underline-fixed">Scopri di più →</span>
      </p>
    )
  }
</div>
