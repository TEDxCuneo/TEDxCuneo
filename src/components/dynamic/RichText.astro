---
import type { Document } from "@contentful/rich-text-types";
import { BLOCKS } from "@contentful/rich-text-types";
import {
  documentToHtmlString,
  type Options,
} from "@contentful/rich-text-html-renderer";
import type { AssetFields } from "contentful";
import type {
  TypeComponentRichText,
  TypeComponentRichTextSkeleton,
} from "@lib/generated/contentful";
import type { ChainModifier, Entry } from "@lib/utils";

interface Props extends TypeComponentRichText<ChainModifier, string> {}

const options: Partial<Options> = {
  renderMark: {},
  renderNode: {
    // @ts-ignore
    [BLOCKS.EMBEDDED_ASSET]: ({
      data: {
        target: {
          fields: { title, file },
        },
      },
    }: {
      data: {
        target: {
          fields: AssetFields;
        };
      };
    }) => {
      return `<picture>
        <source srcset="${file?.url}?fm=webp&q=80&w=1200&h=800" type="image/webp">
        <source srcset="${file?.url}?fm=jpg&q=80&w=1200&h=800" type="image/jpeg">
        <img src="${file?.url}?fm=jpg&q=80&w=1200&h=800" alt="${title}" loading="lazy">
      </picture>`;
    },
  },
};

const {
  fields: { content },
} = Astro.props;
---

<div
  class="w-full prose mx-auto"
  set:html={content ? documentToHtmlString(content, options) : ""}
/>
